#BlueJ class context
comment0.target=Money
comment0.text=\n\ The\ money\ class\ is\ to\ represent\ how\ much\ money\n\ you\ have\ in\ total.\ Two\ variables\ are\ used\ to\ keep\ track\ of\n\ the\ dollars\ and\ cents.\ The\ cents\ and\ dollars\ will\ always\ be\ \n\ positive\ and\ the\ cents\ can't\ exceed\ 99.\n\n\ @author\ Iakjot\ Kaur\n\ @version\ May\ 28th,\ 2020\n
comment1.params=doll
comment1.target=Money(int)
comment1.text=\n\ This\ method\ is\ to\ initalize\ the\ dollars.\n\ \n\ I\ made\ sure\ the\ dollars\ passed\ is\ larger\ or\ equal\ to\ zero.\n\ And\ then\ I\ set\ it\ to\ the\ int\ being\ passed.\ If\ the\ condition\ isn't\ \n\ true,\ an\ error\ message\ is\ displayed.\n\ I\ initalzed\ the\ cents\ to\ zero.\n\nPRE\:\ int\ to\ pass\ in\nPOST\:\ initializes\ variables\n\ @param\:\ int\n\ *return\:\ none\n
comment10.params=d
comment10.target=void\ add(int)
comment10.text=\n\ This\ method\ is\ to\ add\ the\ dollars\ to\ existing\ dollars.\ \n\ \n\ I\ added\ the\ int\ being\ passed\ in\ to\ the\ current\ dollars\ and\ then\n\ made\ it\ equal\ to\ that.\n\nPRE\:\ int\ passed\ in\nPOST\:\ adds\ to\ the\ dollars\n\ @param\:\ int\n\ *return\:\ none\n
comment11.params=dol\ cents
comment11.target=void\ add(int,\ int)
comment11.text=\n\ This\ method\ is\ to\ add\ the\ dollars\ and\ cents\ to\ the\ existing\ dollars.\n\ \n\ I\ added\ the\ ints\ being\ passed\ in\ to\ either\ the\ dollars\ and\ cents\ that\n\ are\ already\ there.\ And\ then\ I\ made\ it\ the\ current.\n\nPRE\:\ ints\ passed\ in\nPOST\:\ adds\ to\ the\ dollars\ and\ cents\n\ @param\:\ int\n\ *return\:\ none\n
comment12.params=other
comment12.target=void\ add(Money)
comment12.text=\n\ This\ method\ is\ to\ add\ the\ money\ object.\n\ \n\ First\ I\ made\ sure\ the\ condition\ is\ met\ and\ then\ added\ to\ the\n\ current\ dollar\ and\ cents.\ I\ added\ to\ the\ object\ to\ the\ current\n\ dollar\ and\ cents\ as\ well\ and\ made\ it\ the\ current.\n\nPRE\:\ money\ object\ to\ pass\ in\nPOST"\ adds\ to\ the\ dollars\ and\ cents\n\ @param\:\ Oject\n\ *return\:\ none\n
comment13.params=o
comment13.target=boolean\ equals(Money)
comment13.text=\n\ This\ method\ is\ to\ check\ if\ the\ moneys\ are\ equal\ to\ each\ other.\n\ \n\ \ I\ made\ sure\ the\ dollars\ and\ the\ object\ dollar,\ the\ cents\ and\ the\ \n\ \ object\ cents\ are\ equal\ to\ each\ othr,\ then\ I\ returned\ true.\n\ \ If\ its\ not\ then\ I\ returned\ false.\n\nPRE\:\ money\ object\ to\ pass\ in\nPOST\:\ true\ or\ false\ based\ on\ equality\n\ @param\:\ Object\n\ *return\:\ boolean\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ This\ method\ is\ to\ print\ out\ the\ money.\n\ \n\ I\ returned\ the\ get\ money\ method\ to\ get\ the\ dollars\ and\ cents.\n\ And\ then\ added\ the\ money\ symbol\ next\ to\ it.\n\nPRE\:\ none\nPOST\:\ returns\ the\ money\ as\ a\ string\n\ @param\:\ none\n\ *return\:\ String\n
comment15.params=m
comment15.target=int\ compareTo(Money)
comment15.text=\n\ This\ method\ is\ to\ compare\ the\ money\n\ \n\ I\ compared\ the\ class\ data\ with\ the\ money\ object\ data\ to\ see\ if\ they\n\ matched\ and\ then\ returned\ the\ money.\n\nPRE\:\ money\ object\ to\ compare\nPOST\:\ comapres\ the\ money\ object\ by\ class\n\ @param\:\ object\n\ *return\:\ int\n
comment16.params=
comment16.target=Money\ clone()
comment16.text=\n\ This\ method\ is\ to\ clone\ the\ money\n\ \n\ Used\ a\ try\ and\ catch\ statement\ to\ clone\ the\ money\ and\ to\ catch\ any\ \n\ errors\ along\ the\ way.\n\nPRE\:\ none\nPOST\:clones\n\ @param\:\ object\n\ *return\:\ int\n
comment2.params=doll\ cent
comment2.target=Money(int,\ int)
comment2.text=\n\ This\ method\ is\ to\ initalize\ the\ dollars\ and\ cents.\n\ \n\ I\ made\ sure\ that\ the\ dollars\ being\ passed\ in\ is\ greater\ or\ equal\ to\ zero.\n\ And\ then\ I\ initalized\ it,\ if\ not\ then\ I\ showed\ an\ error\ message.\ \n\ I\ made\ sure\ that\ the\ cents\ are\ between\ zero\ and\ 99\ and\ then\ initalized\ it.\n\nPRE\:\ ints\ to\ pass\ in\ for\ dollar\ and\ cent\nPOST\:\ initialzes\ varibales\n\ @param\:\ int\n\ *return\:\ none\n
comment3.params=other
comment3.target=Money(Money)
comment3.text=\n\ This\ method\ is\ to\ set\ the\ dollars\ and\ cents\ to\ the\ money\ object\ being\ passed\ in.\n\ \n\ I\ made\ sure\ the\ money\ object\ isn't\ null\ and\ an\ instance\ of\ money,\ and\n\ if\ it\ wasn't,\ then\ I\ initialzed\ the\ dollars\ and\ cents\ to\ the\ money\ object.\n\ Showed\ an\ error\ message\ if\ the\ condition\ wasn't\ true.\n\nPRE\:\ have\ money\ object\ to\ pass\ in\nPOST\:\ intializes\ the\ Money\n\ @param\:\ Object\n\ *return\:\ none\n
comment4.params=dollars
comment4.target=void\ setDollars(int)
comment4.text=\n\ This\ method\ is\ to\ set\ the\ dollars\n\ \n\ checked\ invarients\ and\ set\ the\ dollars\n\nPRE\:\ int\ passed\ in\nPOST\:\ sets\ the\ dollars\n\ @param\:\ none\n\ *return\:\ none\n
comment5.params=c
comment5.target=void\ setCents(int)
comment5.text=\n\ This\ method\ is\ to\ set\ the\ cents\n\ \n\ checked\ invarients\ and\ set\ the\ cents\n\nPRE\:\ int\ passed\ in\nPOST\:\ sets\ the\ cents\n\ @param\:\ none\n\ *return\:\ none\n
comment6.params=doll\ c
comment6.target=void\ setMoney(int,\ int)
comment6.text=\n\ This\ method\ is\ to\ set\ the\ money,\ so\ the\ dollars\ and\ cents.\n\ \n\ In\ order\ to\ set\ the\ money,\ first\ I\ made\ sure\ the\ invarients\ were\ met.\n\ Like\ the\ dollar\ has\ to\ be\ equal\ to\ zero\ or\ greater\ than\ zero.\n\ The\ cents\ have\ to\ be\ between\ zero\ and\ 99.\n\ If\ the\ conditions\ are\ met,\ then\ I\ used\ the\ dollar\ and\ cent\ set\ methods\n\ to\ set\ the\ dollars\ and\ cents\ being\ passed\ in.\n\ \nPRE\:\ have\ ints\ to\ pass\ in\nPOST\:\ sets\ the\ money\n\ @param\:\ Object\n\ *return\:\ none\n
comment7.params=
comment7.target=int\ getCents()
comment7.text=\n\ This\ method\ is\ to\ get\ the\ cents.\n\ \n\ I\ returned\ the\ cents\ from\ the\ instance\ variable\n\nPRE\:\ none\nPOST\:\ returns\ the\ cents\n\ @param\:\ none\n\ *return\:\ int\n
comment8.params=
comment8.target=int\ getDollars()
comment8.text=\n\ This\ method\ is\ to\ get\ the\ dollars.\n\ \n\ I\ returned\ the\ dollars\ from\ the\ instance\ variable.\ \n\nPRE\:\ none\nPOST\:\ returns\ the\ dollars\n\ @param\:\ none\n\ *return\:\ int\n
comment9.params=
comment9.target=double\ getMoney()
comment9.text=\n\ This\ method\ is\ to\ get\ the\ money.\n\ \n\ I\ returned\ the\ dollars\ and\ cents.\n\nPRE\:\ none\nPOST\:\ returns\ the\ money\ as\ double\n\ @param\:\ none\n\ *return\:\ double\n
numComments=17
