#BlueJ class context
comment0.target=Fraction
comment0.text=\n\ This\ class\ is\ about\ gathering\ the\ fraction.\n\n\ In\ this\ class,\ there\ are\ 3\ constructors\ storing\ the\ numerators\ and\ denominators.\n\ There\ are\ getters\ and\ setters\ so\ the\ fraction\ can\ change.\n\ I\ have\ conditions\ in\ the\ setters\ so\ the\ fractions\ work\n\ There\ is\ a\ method\ to\ reduce\ the\ fraction\ so\ you\ can\ compare\ simplified\ forms.\n\ I\ have\ a\ boolean\ to\ see\ if\ the\ denominator\ and\ numerators\ match,\ they\ if\ do\n\ then\ they\ are\ the\ same.\n\n\n\ @author\ Iakjot\ Kaur\n\ @version\ May\ 28th,\ 2020\n
comment1.params=
comment1.target=Fraction()
comment10.params=n\ d
comment10.target=void\ setFraction(double,\ double)
comment10.text=\n\ This\ method\ is\ to\ set\ the\ fraction.\n\ \n\ The\ passed\ in\ int\ is\ stored\ in\ the\ numerator\ instance\ variable\n\ The\ passed\ in\ int\ is\ stored\ in\ the\ denominator\ only\ if\ it\ doesn't\ equal\ zero.\n\nPRE\:\ have\ doubles\ to\ pass\ in\ \nPOST\:\ sets\ the\ fraction\n\n\ @param\:\ double\n\ *return\:\ none\n
comment11.params=other
comment11.target=boolean\ equals(Fraction)
comment11.text=\n\ This\ method\ is\ to\ compare\ the\ fraction's\ and\ the\ fraction\ instance's\n\ numerator\ and\ denominator.\n\ \n\ It\ returns\ true\ if\ the\ fraction\ matches,\ and\ false\ if\ they\ are\ different.\n\nPRE\:\ have\ a\ Fraction\ object\nPOST\:\ returns\ true\ or\ false\ based\ on\ equality\n\ @param\:\ Fraction\n\ *return\:\ boolean\n
comment12.params=n\ d
comment12.target=int\ gcd(int,\ int)
comment12.text=\n\ This\ method\ is\ to\ get\ the\ greatest\ common\ denominator.\n\ \n\ If\ the\ denominator\ is\ zero,\ I\ return\ the\ passed\ in\ in\n\ It\ returns\ true\ if\ the\ fraction\ matches,\ and\ false\ if\ they\ are\ different.\n\nPRE\:\ have\ ints\nPOST\:\ returns\ the\ greatest\ common\ denominator\n\ @param\:\ int\n\ *return\:\ int\n
comment13.params=
comment13.target=void\ reduce()
comment13.text=\n\ This\ method\ is\ to\ reduce\ the\ fraction.\n\ \n\ I\ use\ the\ gcd\ and\ store\ it\ into\ an\ int\ variable\n\ Then\ I\ stored\ the\ numerator\ and\ denominator\ in\ seperate\ variables.\n\nPRE\:\ none\nPOST\:\ reduced\ the\ fraction\n\ @param\:\ none\n\ *return\:\ none\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ This\ method\ is\ to\ print\ the\ fraction.\n\ \n\ returned\ the\ numerator\ over\ the\ denominator\n\nPRE\:\ none\nPOST\:\ returns\ the\ string\ of\ a\ fraction\n\ @param\:\ none\n\ *return\:\ none\n
comment15.params=
comment15.target=Fraction\ clone()
comment15.text=\n\ This\ method\ is\ to\ clone\ the\ fraction.\n\ \n\ returned\ the\ fraction\n\n\n\ @param\:\ none\n\ *return\:\ none\n
comment16.params=amt
comment16.target=Fraction\ subtract(Fraction)
comment16.text=\n\ This\ method\ is\ to\ subtract\ the\ fraction\n\ \n\ initialzed\ the\ numerator\ and\ denominator\n\ if\ the\ denominator\ and\ the\ input\ denominator\ are\ the\ same\ i\ subtracted\n\ \n\n\n\ @param\:\ object\n\ *return\:\ object\n
comment17.params=o
comment17.target=int\ compareTo(java.lang.Object)
comment17.text=\n\ This\ method\ is\ to\ compare\n\ \n\ made\ sure\ the\ invairents\ are\ followed.\n\n\n\ @param\:\ object\n\ *return\:\ none\n
comment2.params=n\ d
comment2.target=Fraction(int,\ int)
comment2.text=\n\ This\ method\ is\ to\ initialize\ the\ instance\ variables.\n\ \n\ Then\ I\ stored\ the\ numerator\ and\ denominator\ in\ seperate\ variables.\n\nPRE\:\ have\ ints\ to\ pass\ in\nPOST\:\ initializes\ the\ variables\n\ @param\:\ ints\n\ *return\:\ none\n
comment3.params=nn\ nd
comment3.target=Fraction(double,\ double)
comment3.text=\n\ This\ method\ is\ to\ initialize\ the\ instance\ variables.\n\ \n\ Then\ I\ stored\ the\ numerator\ and\ denominator\ in\ seperate\ variables.\n\nPRE\:\ have\ doubles\ to\ pass\ in\ \nPOST\:\ initializes\ the\ variables\n\ @param\:\ double\n\ *return\:\ none\n
comment4.params=toCopy
comment4.target=Fraction(Fraction)
comment4.text=\n\ This\ constructor\ is\ to\ copy\ the\ fraction\n\ \n\ I\ used\ the\ set\ methods\ to\ copy\ the\ numerator\ and\ denominator\n\nPRE\:\ Fraction\ to\ pass\ in\nPOST\:\ initizales\ the\ fraction\n\ @param\:\ fraction\n\ *return\:\ none\n
comment5.params=
comment5.target=int\ getNumerator()
comment5.text=\n\ This\ method\ is\ to\ get\ the\ numerator.\n\ \n\ I\ returned\ the\ instance\ variable.\n\nPRE\:\ have\ numerator\nPOST\:\ returns\ the\ numerator\n\ @param\:\ none\n\ *return\:\ none\n
comment6.params=
comment6.target=int\ getDenominator()
comment6.text=\n\ This\ method\ is\ to\ get\ the\ numerator.\n\ \n\ I\ returned\ the\ instance\ variable.\n\n\ @param\:\ none\n\ *return\:\ none\n
comment7.params=num
comment7.target=void\ setNumerator(int)
comment7.text=\n\ This\ method\ is\ to\ set\ the\ numerator.\n\ \n\ set\ the\ instance\ variable\ to\ the\ parameter\ passed\ in\n\nPRE\:\ have\ int\ to\ pass\ in\nPOST\:\ sets\ the\ numerator\n\ @param\:\ int\n\ *return\:\ none\n
comment8.params=denominator
comment8.target=void\ setDenominator(int)
comment8.text=\n\ This\ method\ is\ to\ set\ the\ denominator\n\ \n\ set\ the\ instance\ variable\ to\ the\ parameter\ passed\ in\n\nPRE\:\ have\ int\ to\ pass\ in\nPOST\:\ sets\ the\ denominator\n\ @param\:\ int\n\ *return\:\ none\n
comment9.params=theN\ theD
comment9.target=void\ setFraction(int,\ int)
comment9.text=\n\ This\ method\ is\ to\ set\ the\ fraction.\n\ \n\ The\ passed\ in\ int\ is\ stored\ in\ the\ numerator\ instance\ variable\n\ The\ passed\ in\ int\ is\ stored\ in\ the\ denominator\ only\ if\ it\ doesn't\ equal\ zero.\n\nPRE\:\ have\ ints\ to\ pass\ in\nPOST\:\ sets\ the\ Fraction\n\n\ @param\:\ int\n\ *return\:\ none\n
numComments=18
